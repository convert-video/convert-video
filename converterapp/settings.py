"""
Django settings for converterapp project.

Generated by 'django-admin startproject' using Django 4.1.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import environ
import os

env = environ.Env()
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-1el(j44&(8mjy4)ah!3pqsm5uhqd$h1b93e4-#rlap-59)-nb8"

IMAGEMAGICK_BINARY = r"/usr/local/bin/magick"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

MAIN_APPS = [
    "mainapps.video",
    "mainapps.home",
    "mainapps.accounts",
    "mainapps.vidoe_text",
    "mainapps.audio",
    "mainapps.payment",
]

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "rest_framework",
    "convert.apps.ConvertConfig",
    "djstripe",
    "mainapps.video.apps.VideoConfig",
    "mainapps.home.apps.HomeConfig",
    "mainapps.accounts.apps.AccountsConfig",
    "mainapps.vidoe_text.apps.VidoeTextConfig",
    "mainapps.audio.apps.AudioConfig",
    "mainapps.payment.apps.PaymentConfig",
    "django_extensions",
    "storages",
    "djoser",
    "rest_framework.authtoken",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "converterapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "converterapp.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": env("DB_ENGINE"),
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD_MYSQL"),
        "HOST": env("DB_HOST"),
        "PORT": env("DB_PORT"),
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# REST Framework Configuration
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",  # Allows unrestricted access
    ],
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.TokenAuthentication",
    ],
}

# Static files (CSS, JavaScript, Images)
STATIC_URL = "/static/"
# STATIC_ROOT = os.path.join(BASE_DIR, "static")

# Media files (Uploaded files)
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "uploads")
# Alternatively, to allow all:
CORS_ALLOW_ALL_ORIGINS = True

# This is where static files will be collected
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]

DJSTRIPE_FOREIGN_KEY_TO_FIELD = "id"
# STRIPE_LIVE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY', 'sk_test_51Q8ceGCQ2Ys80qlSxSLi49Y18pn59ayq5V2Y4UMVQ4ErPpoGeuIQMQdFcAXZTH62saDSsQsiIfEb5JyhLxbIPGGt00pXV7c6b6')
# STRIPE_PUBLISHABLE_KEY = os.getenv('STRIPE_PUBLISHABLE_KEY', 'pk_test_51Q8ceGCQ2Ys80qlSzJF2Q4L0vQqmilXaJXyGqp0sXkPyqnqKIaRViZ03CyDngq6YQYyteMVYuLEe0sszHhQki0F200BlD2JUOs')

STRIPE_PRICING_TABLE_ID = "prctbl_1Q8xzVHYtd156QFY1DvXSVOC"

DJSTRIPE_WEBHOOK_SECRET = (
    "whsec_61fecffc109bc29df79785924676e6c4a5aa5df5961865a88e7769957568caa8"
)

ROOT_URLCONF = "converterapp.urls"

AUTH_USER_MODEL = "accounts.User"

DJSTRIPE_SECRET_KEY = os.getenv("STRIPE_TEST_SECRET_KEY")
STRIPE_PUBLISHABLE_KEY = os.getenv("STRIPE_PUBLISHABLE_KEY")

# DJSTRIPE_SECRET_KEY = STRIPE_TEST_SECRET_KEY  # For test mode
# DJSTRIPE_LIVE_SECRET_KEY = STRIPE_LIVE_SECRET_KEY  # For live mode

# Optionally, set these to avoid using the database for keys
DJSTRIPE_USE_NATIVE_JSONFIELD = True  # Based on your preference

# DEFAULT_FILE_STORAGE='storages.backends.s3boto3.S3Boto3Storage'
# AWS S3 configuration
AWS_ACCESS_KEY_ID = os.getenv("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.getenv("AWS_SECRET_ACCESS_KEY")
AWS_STORAGE_BUCKET_NAME = "vlsmlsaker"
AWS_S3_REGION_NAME = "eu-north-1"
AWS_S3_CUSTOM_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME
AWS_S3_FILES_OVERWRITE = False
STORAGES = {
    "default": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
    "staticfiles": {"BACKEND": "storages.backends.s3boto3.S3Boto3Storage"},
}
DJOSER = {
    "SERIALIZERS": {
        "user_create": "mainapps.accounts.serializers.CustomUserCreateSerializer",
    },
}

STRIPE_LIVE_SECRET_KEY = os.environ.get("STRIPE_LIVE_SECRET_KEY")
STRIPE_TEST_SECRET_KEY = os.environ.get("STRIPE_TEST_SECRET_KEY")
STRIPE_LIVE_MODE = False
USER_DEFAULT_PASSWORD = env("USER_DEFAULT_PASSWORD")

LOGIN_URL = env("LOGIN_URL")

SET_PASSWORD_URL = env("SET_PASSWORD_URL")

EMAIL_BACKEND = env("EMAIL_BACKEND")
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env("EMAIL_PORT")
# EMAIL_PORT = 465  # SSL port
# EMAIL_USE_SSL = env("EMAIL_USE_SSL")
EMAIL_USE_TLS = env("EMAIL_USE_TLS")
EMAIL_HOST_USER = env("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = env("DEFAULT_FROM_EMAIL")
